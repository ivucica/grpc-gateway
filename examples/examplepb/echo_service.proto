syntax = "proto3";
option go_package = "examplepb";

// Echo Service
//
// Echo Service API consists of a single service which returns
// a message.
//
// <!-- swagger extras start
// {
//   "info": {
//     "title": "Echo Service",
//     "version": "1.0",
//     "contact": {
//       "name": "gRPC-Gateway project",
//       "url": "https://github.com/grpc-ecosystem/grpc-gateway",
//       "email": "none@example.com"
//     }
//   },
//   "host": "localhost",
//   "externalDocs": {
//     "url": "https://github.com/grpc-ecosystem/grpc-gateway",
//     "description": "More about gRPC-Gateway"
//   }
// }
// swagger extras end -->
package grpc.gateway.examples.examplepb;

import "google/api/annotations.proto";

// SimpleMessage represents a simple message sent to the Echo service.
//
// <!-- swagger extras start
// {
//   "externalDocs": {
//     "url": "http://github.com/grpc-ecosystem/grpc-gateway",
//     "description": "Find out more about EchoService"
//   }
// }
// swagger extras end -->
message SimpleMessage {
	// Id represents the message identifier.
	string id = 1;
}

// Echo service responds to incoming echo requests.
service EchoService {
	// Echo method receives a simple message and returns it.
	//
	// The message posted as the id parameter will also be
	// returned.
	//
	// <!-- swagger extras start
	// {
	//   "externalDocs": {
	//     "url": "http://github.com/grpc-ecosystem/grpc-gateway",
	//     "description": "Find out more about EchoService"
	//   }
	// }
	// swagger extras end -->
	rpc Echo(SimpleMessage) returns (SimpleMessage) {
		option (google.api.http) = {
			post: "/v1/example/echo/{id}"
		};
	}
	// EchoBody method receives a simple message and returns it.
	rpc EchoBody(SimpleMessage) returns (SimpleMessage) {
		option (google.api.http) = {
			post: "/v1/example/echo_body"
			body: "*"
		};
	}
}
